import ale.server.ale.calculations.AssignmentsCalculations;
import ale.server.models.AssignmentFourResult;
import ale.server.models.AssignmentTwoResult;
import ale.server.models.Formula;
import org.junit.Test;

import java.util.List;
import java.util.Map;

import static org.hamcrest.Matchers.is;
import static org.junit.Assert.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;


/**
 * Testing will be applied by first generating the disjunctive normal form. Second, the normal form will be passed for truth table generation
 *  Third, the actual test will be comparison with the truth table generated by the initial formula and the one from the normal form(they are supposed to match)
 */
public class DisjunctiveNormalFormTest {

    @Test
    public void disjunctiveNormalFormGenerationFormula1() {
        // Initialization
        Formula initialTestFormula = mock(Formula.class);
        when(initialTestFormula.getFormula()).thenReturn(">(A,B)");

        AssignmentsCalculations assignmentsCalculations = new AssignmentsCalculations(initialTestFormula);

        // Retrieving the disjunctive normal form
        AssignmentFourResult assignmentFourResult = assignmentsCalculations.generateAssignmentFourResult();
        String disjunctiveNormalFormTruthTable = assignmentFourResult.getDisjunctiveNormalFormTruthTable();

        // Retrieving of the truth table for the initial formula
        AssignmentTwoResult assignmentTwoResultInitialFormula = assignmentsCalculations.generateAssignmentTwoResult();
        List<Map<Character, Integer>> tableResultInitialFormula = assignmentTwoResultInitialFormula.getTableResults();

        // Generate new truthTable based on the disjunctive normal form
        Formula normalFormFormula = mock(Formula.class);
        when(normalFormFormula.getFormula()).thenReturn(disjunctiveNormalFormTruthTable);

        assignmentsCalculations = new AssignmentsCalculations(normalFormFormula);

        AssignmentTwoResult assignmentTwoResultNormalFormula = assignmentsCalculations.generateAssignmentTwoResult();
        List<Map<Character, Integer>> tableResultNormalFormula = assignmentTwoResultNormalFormula.getTableResults();


        assertThat(tableResultInitialFormula, is(tableResultNormalFormula));

    }

}
